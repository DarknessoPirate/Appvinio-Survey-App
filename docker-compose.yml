version: '3.8'

services:
  # PostgreSQL Database
  database:
    container_name: survey-database
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_EXTERNAL_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - survey-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot API
  api:
    container_name: survey-api
    build:
      context: ./AppvSurveyAPI
      dockerfile: Dockerfile
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      SHOW_SQL: ${SHOW_SQL}
      LOG_SQL: ${LOG_SQL}
      LOG_APP: ${LOG_APP}
      LOG_ROOT: ${LOG_ROOT}
    ports:
      - "${API_EXTERNAL_PORT}:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - survey-network
    restart: unless-stopped

  # Angular Frontend
  frontend:
    container_name: survey-frontend
    build:
      context: ./AppvSurveyClient
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_EXTERNAL_PORT}:80"  
    depends_on:
      - api
    networks:
      - survey-network
    restart: unless-stopped

volumes:
  postgres_data:
    name: survey_postgres_data

networks:
  survey-network:
    driver: bridge